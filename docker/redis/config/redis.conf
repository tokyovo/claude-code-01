# Redis Configuration for Financial Application Cache
# Based on Redis 7.0 with optimizations for session and data caching

# Network
bind 0.0.0.0
port 6379
timeout 0
tcp-keepalive 300

# General
daemonize no
pidfile /var/run/redis_6379.pid
loglevel notice
logfile ""

# Snapshotting
save 900 1
save 300 10
save 60 10000
stop-writes-on-bgsave-error yes
rdbcompression yes
rdbchecksum yes
dbfilename dump.rdb
dir /data

# Security
# requirepass your_redis_password_here
# Use AUTH to require password authentication

# Limits
maxmemory 256mb
maxmemory-policy allkeys-lru
maxmemory-samples 5

# Lazy freeing
lazyfree-lazy-eviction yes
lazyfree-lazy-expire yes
lazyfree-lazy-server-del yes

# Append only file
appendonly yes
appendfilename "appendonly.aof"
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb
aof-load-truncated yes
aof-use-rdb-preamble yes

# Slow log
slowlog-log-slower-than 10000
slowlog-max-len 128

# Latency monitoring
latency-monitor-threshold 100

# Event notification
notify-keyspace-events ""

# Hash table settings
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# List settings
list-max-ziplist-size -2
list-compress-depth 0

# Set settings
set-max-intset-entries 512

# Sorted set settings
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# String settings for financial data precision
# Ensure proper handling of numeric strings
proto-max-bulk-len 512mb

# Client settings
timeout 0
tcp-keepalive 300

# Memory usage optimization for financial data
activerehashing yes

# LUA script settings
lua-time-limit 5000

# Cluster settings (disabled for single instance)
# cluster-enabled no

# Session management optimizations
# TTL for session data (24 hours)
# This will be set programmatically in the application